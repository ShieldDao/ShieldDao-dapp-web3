[{"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/routes.js":"1","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/DWRoute.js":"2","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Vaults/index.js":"3","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/index.js":"4","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavItem.js":"5","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/App.js":"6","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavLinks.js":"7","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/WalletConnect.js":"8","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/index.js":"9","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/contexts/WalletContext.js":"10","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/utils.js":"11","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/bignumber.js":"12","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/box.js":"13","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/Providers.js":"14","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Home/index.js":"15","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/index.js":"16","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/dev.js":"17","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/chains.js":"18","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/AppLayout.js":"19","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/api.js":"20","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/VaultCard/index.js":"21","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/VaultCard/DepositNWithdraw.js":"22","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/SidebarFooter.js":"23"},{"size":346,"mtime":1610808112362,"results":"24","hashOfConfig":"25"},{"size":400,"mtime":1610808423885,"results":"26","hashOfConfig":"25"},{"size":910,"mtime":1610899386580,"results":"27","hashOfConfig":"25"},{"size":738,"mtime":1610898951071,"results":"28","hashOfConfig":"25"},{"size":1977,"mtime":1610902386767,"results":"29","hashOfConfig":"25"},{"size":584,"mtime":1610808509190,"results":"30","hashOfConfig":"25"},{"size":2314,"mtime":1610902493892,"results":"31","hashOfConfig":"25"},{"size":1628,"mtime":1610817931096,"results":"32","hashOfConfig":"25"},{"size":272,"mtime":1610810674417,"results":"33","hashOfConfig":"25"},{"size":5225,"mtime":1610816938048,"results":"34","hashOfConfig":"25"},{"size":6256,"mtime":1610812176211,"results":"35","hashOfConfig":"25"},{"size":4335,"mtime":1610812351230,"results":"36","hashOfConfig":"25"},{"size":4111,"mtime":1610814722285,"results":"37","hashOfConfig":"25"},{"size":178,"mtime":1610810600977,"results":"38","hashOfConfig":"25"},{"size":583,"mtime":1610808038008,"results":"39","hashOfConfig":"25"},{"size":661,"mtime":1610901712114,"results":"40","hashOfConfig":"25"},{"size":668,"mtime":1610814803878,"results":"41","hashOfConfig":"25"},{"size":4028,"mtime":1610812176211,"results":"42","hashOfConfig":"25"},{"size":499,"mtime":1610898909650,"results":"43","hashOfConfig":"25"},{"size":1033,"mtime":1610812251868,"results":"44","hashOfConfig":"25"},{"size":3410,"mtime":1610899085860,"results":"45","hashOfConfig":"25"},{"size":2218,"mtime":1610898759904,"results":"46","hashOfConfig":"25"},{"size":1092,"mtime":1610902454448,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ifk8z0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/routes.js",[],["100","101"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/DWRoute.js",[],["102","103"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Vaults/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavItem.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/App.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavLinks.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/WalletConnect.js",[],["104","105"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/contexts/WalletContext.js",["106","107","108","109","110","111","112","113"],"import { createContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\nimport { convertUtf8ToHex } from '@walletconnect/utils';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { apiGetAccountAssets } from '../helpers/api';\nimport { openBox, getProfile } from '../helpers/box';\nimport {\n  hashPersonalMessage,\n  recoverPublicKey,\n  recoverPersonalSignature,\n  formatTestTransaction,\n  getChainData,\n} from '../helpers/utils';\nimport { notification } from 'antd';\n\nconst INITIAL_STATE = {\n  connected: false,\n  setConnected: () => {},\n  fetching: false,\n  setFetching: () => {},\n  address: null,\n  setAddress: () => {},\n  web3: null,\n  setWeb3: () => {},\n  provider: null,\n  setProvider: () => {},\n  chainId: 1,\n  setChainId: () => {},\n  networkId: 1,\n  setNetworkId: () => {},\n  assets: [],\n  setAssets: () => {},\n  showModal: false,\n  setShowModal: () => {},\n  pendingRequest: false,\n  setPendingRequest: () => {},\n  result: null,\n  setResult: () => {},\n};\n\nexport const walletContext = createContext(INITIAL_STATE);\n\nconst initWeb3 = (provider) => {\n  const web3 = new Web3(provider);\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: 'chainId',\n        call: 'eth_chainId',\n        outputFormatter: web3.utils.hexToNumber,\n      },\n    ],\n  });\n\n  return web3;\n};\n\nconst WalletProvider = (props) => {\n  const [connected, setConnected] = useState(false);\n  const [fetching, setFetching] = useState(false);\n  const [address, setAddress] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [chainId, setChainId] = useState(1);\n  const [networkId, setNetworkId] = useState(1);\n  const [assets, setAssets] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [pendingRequest, setPendingRequest] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const getNetwork = () => getChainData(chainId).network;\n  const getProviderOptions = () => {\n    return {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: process.env.REACT_APP_INFURA_ID,\n        },\n      },\n    };\n  };\n\n  const web3Modal = new Web3Modal({\n    network: getNetwork(),\n    cacheProvider: false,\n    providerOptions: getProviderOptions(),\n  });\n\n  const resetApp = async () => {\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      await web3.currentProvider.close();\n    }\n\n    web3Modal.clearCachedProvider();\n    setConnected(false);\n    setFetching(false);\n    setAddress(null);\n    setWeb3(null);\n    setProvider(null);\n    setChainId(1);\n    setNetworkId(1);\n    setAssets([]);\n    setShowModal(false);\n    setPendingRequest(false);\n    setResult(null);\n  };\n\n  const subscribeProvider = async (provider) => {\n    if (!provider.on) {\n      return;\n    }\n\n    provider.on('accountsChanged', async (accounts) => {\n      setAddress(await accounts[0]);\n      await getAccountAssets();\n    });\n\n    provider.on('chainChanged', async (chainId) => {\n      const networkId = await web3.eth.net.getId();\n      setNetworkId(networkId);\n      setChainId(chainId);\n      await getAccountAssets();\n    });\n\n    provider.on('connect', (info) => {\n      console.info('Connected');\n    });\n\n    provider.on('disconnect', (error) => {\n      console.info('Disconnected');\n      resetApp();\n    });\n  };\n\n  const onConnect = async () => {\n    try {\n      const provider = await web3Modal.connect();\n      await subscribeProvider(provider);\n      const web3 = initWeb3(provider);\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      const networkId = await web3.eth.net.getId();\n      const chainId = await web3.eth.chainId();\n\n      setWeb3(web3);\n      setProvider(provider);\n      setConnected(true);\n      setAddress(address);\n      setChainId(chainId);\n      setNetworkId(networkId);\n      await getAccountAssets();\n    } catch (err) {\n      // console.error(Object.keys(err));\n      if (err?.message) {\n        notification.error({\n          message: err.message,\n        });\n      }\n    }\n  };\n\n  const getAccountAssets = async () => {\n    setFetching(true);\n    try {\n      // get account balances\n      const assets = await apiGetAccountAssets(address, chainId);\n\n      setAssets(assets);\n      setFetching(false);\n    } catch (error) {\n      console.error(error); // tslint:disable-line\n      setFetching(false);\n    }\n  };\n\n  useEffect(() => {\n    if (web3Modal?.cachedProvider) {\n      onConnect();\n    }\n\n    return () => {};\n  }, []);\n\n  return (\n    <walletContext.Provider\n      value={{\n        connected,\n        fetching,\n        address,\n        web3,\n        provider,\n        chainId,\n        networkId,\n        assets,\n        showModal,\n        pendingRequest,\n        result,\n        setConnected,\n        setFetching,\n        setAddress,\n        setWeb3,\n        setProvider,\n        setChainId,\n        setNetworkId,\n        setAssets,\n        setShowModal,\n        setPendingRequest,\n        setResult,\n        onConnect,\n        resetApp,\n      }}\n    >\n      {props.children}\n    </walletContext.Provider>\n  );\n};\n\nexport default WalletProvider;\n","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/utils.js",[],["114","115"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/bignumber.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/box.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/Providers.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Home/index.js",[],["116","117"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/dev.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/chains.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/AppLayout.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/api.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/VaultCard/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/VaultCard/DepositNWithdraw.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/SidebarFooter.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":17},{"ruleId":"126","severity":1,"message":"131","line":7,"column":19,"nodeType":"128","messageId":"129","endLine":7,"endColumn":29},{"ruleId":"126","severity":1,"message":"132","line":9,"column":3,"nodeType":"128","messageId":"129","endLine":9,"endColumn":22},{"ruleId":"126","severity":1,"message":"133","line":10,"column":3,"nodeType":"128","messageId":"129","endLine":10,"endColumn":19},{"ruleId":"126","severity":1,"message":"134","line":11,"column":3,"nodeType":"128","messageId":"129","endLine":11,"endColumn":27},{"ruleId":"126","severity":1,"message":"135","line":12,"column":3,"nodeType":"128","messageId":"129","endLine":12,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":184,"column":6,"nodeType":"138","endLine":184,"endColumn":8,"suggestions":"139"},{"ruleId":"118","replacedBy":"140"},{"ruleId":"120","replacedBy":"141"},{"ruleId":"118","replacedBy":"142"},{"ruleId":"120","replacedBy":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],["144"],["145"],"no-unused-vars","'convertUtf8ToHex' is defined but never used.","Identifier","unusedVar","'openBox' is defined but never used.","'getProfile' is defined but never used.","'hashPersonalMessage' is defined but never used.","'recoverPublicKey' is defined but never used.","'recoverPersonalSignature' is defined but never used.","'formatTestTransaction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onConnect' and 'web3Modal?.cachedProvider'. Either include them or remove the dependency array.","ArrayExpression",["146"],["144"],["145"],["144"],["145"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [onConnect, web3Modal?.cachedProvider]",{"range":"149","text":"150"},[4593,4595],"[onConnect, web3Modal?.cachedProvider]"]