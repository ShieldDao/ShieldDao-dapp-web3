[{"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/routes.js":"1","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/DWRoute.js":"2","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Vaults/index.js":"3","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/index.js":"4","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavItem.js":"5","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/App.js":"6","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavLinks.js":"7","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/WalletConnect.js":"8","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/index.js":"9","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/contexts/WalletContext.js":"10","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/utils.js":"11","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/bignumber.js":"12","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/box.js":"13","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/Providers.js":"14","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Home/index.js":"15","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/index.js":"16","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/dev.js":"17","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/chains.js":"18","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/AppLayout.js":"19","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/api.js":"20","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/VaultCard/index.js":"21"},{"size":346,"mtime":1610808112362,"results":"22","hashOfConfig":"23"},{"size":400,"mtime":1610808423885,"results":"24","hashOfConfig":"23"},{"size":799,"mtime":1610829564083,"results":"25","hashOfConfig":"23"},{"size":705,"mtime":1610810651285,"results":"26","hashOfConfig":"23"},{"size":512,"mtime":1610808907389,"results":"27","hashOfConfig":"23"},{"size":584,"mtime":1610808509190,"results":"28","hashOfConfig":"23"},{"size":1011,"mtime":1610828755411,"results":"29","hashOfConfig":"23"},{"size":1628,"mtime":1610817931096,"results":"30","hashOfConfig":"23"},{"size":235,"mtime":1610810667681,"results":"31","hashOfConfig":"23"},{"size":5225,"mtime":1610816938048,"results":"32","hashOfConfig":"23"},{"size":6256,"mtime":1610812176211,"results":"33","hashOfConfig":"23"},{"size":4335,"mtime":1610812351230,"results":"34","hashOfConfig":"23"},{"size":4111,"mtime":1610814722285,"results":"35","hashOfConfig":"23"},{"size":178,"mtime":1610810600977,"results":"36","hashOfConfig":"23"},{"size":583,"mtime":1610808038008,"results":"37","hashOfConfig":"23"},{"size":372,"mtime":1610476493563,"results":"38","hashOfConfig":"23"},{"size":668,"mtime":1610814803878,"results":"39","hashOfConfig":"23"},{"size":4028,"mtime":1610812176211,"results":"40","hashOfConfig":"23"},{"size":499,"mtime":1610807742411,"results":"41","hashOfConfig":"23"},{"size":1033,"mtime":1610812251868,"results":"42","hashOfConfig":"23"},{"size":3166,"mtime":1610829396837,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ifk8z0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/routes.js",[],["92","93"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/DWRoute.js",[],["94","95"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Vaults/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavItem.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/App.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/NavLinks.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/header/WalletConnect.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/index.js",["96"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/contexts/WalletContext.js",["97","98","99","100","101","102","103","104"],"import { createContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\nimport { convertUtf8ToHex } from '@walletconnect/utils';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { apiGetAccountAssets } from '../helpers/api';\nimport { openBox, getProfile } from '../helpers/box';\nimport {\n  hashPersonalMessage,\n  recoverPublicKey,\n  recoverPersonalSignature,\n  formatTestTransaction,\n  getChainData,\n} from '../helpers/utils';\nimport { notification } from 'antd';\n\nconst INITIAL_STATE = {\n  connected: false,\n  setConnected: () => {},\n  fetching: false,\n  setFetching: () => {},\n  address: null,\n  setAddress: () => {},\n  web3: null,\n  setWeb3: () => {},\n  provider: null,\n  setProvider: () => {},\n  chainId: 1,\n  setChainId: () => {},\n  networkId: 1,\n  setNetworkId: () => {},\n  assets: [],\n  setAssets: () => {},\n  showModal: false,\n  setShowModal: () => {},\n  pendingRequest: false,\n  setPendingRequest: () => {},\n  result: null,\n  setResult: () => {},\n};\n\nexport const walletContext = createContext(INITIAL_STATE);\n\nconst initWeb3 = (provider) => {\n  const web3 = new Web3(provider);\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: 'chainId',\n        call: 'eth_chainId',\n        outputFormatter: web3.utils.hexToNumber,\n      },\n    ],\n  });\n\n  return web3;\n};\n\nconst WalletProvider = (props) => {\n  const [connected, setConnected] = useState(false);\n  const [fetching, setFetching] = useState(false);\n  const [address, setAddress] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [chainId, setChainId] = useState(1);\n  const [networkId, setNetworkId] = useState(1);\n  const [assets, setAssets] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [pendingRequest, setPendingRequest] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const getNetwork = () => getChainData(chainId).network;\n  const getProviderOptions = () => {\n    return {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: process.env.REACT_APP_INFURA_ID,\n        },\n      },\n    };\n  };\n\n  const web3Modal = new Web3Modal({\n    network: getNetwork(),\n    cacheProvider: false,\n    providerOptions: getProviderOptions(),\n  });\n\n  const resetApp = async () => {\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      await web3.currentProvider.close();\n    }\n\n    web3Modal.clearCachedProvider();\n    setConnected(false);\n    setFetching(false);\n    setAddress(null);\n    setWeb3(null);\n    setProvider(null);\n    setChainId(1);\n    setNetworkId(1);\n    setAssets([]);\n    setShowModal(false);\n    setPendingRequest(false);\n    setResult(null);\n  };\n\n  const subscribeProvider = async (provider) => {\n    if (!provider.on) {\n      return;\n    }\n\n    provider.on('accountsChanged', async (accounts) => {\n      setAddress(await accounts[0]);\n      await getAccountAssets();\n    });\n\n    provider.on('chainChanged', async (chainId) => {\n      const networkId = await web3.eth.net.getId();\n      setNetworkId(networkId);\n      setChainId(chainId);\n      await getAccountAssets();\n    });\n\n    provider.on('connect', (info) => {\n      console.info('Connected');\n    });\n\n    provider.on('disconnect', (error) => {\n      console.info('Disconnected');\n      resetApp();\n    });\n  };\n\n  const onConnect = async () => {\n    try {\n      const provider = await web3Modal.connect();\n      await subscribeProvider(provider);\n      const web3 = initWeb3(provider);\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      const networkId = await web3.eth.net.getId();\n      const chainId = await web3.eth.chainId();\n\n      setWeb3(web3);\n      setProvider(provider);\n      setConnected(true);\n      setAddress(address);\n      setChainId(chainId);\n      setNetworkId(networkId);\n      await getAccountAssets();\n    } catch (err) {\n      // console.error(Object.keys(err));\n      if (err?.message) {\n        notification.error({\n          message: err.message,\n        });\n      }\n    }\n  };\n\n  const getAccountAssets = async () => {\n    setFetching(true);\n    try {\n      // get account balances\n      const assets = await apiGetAccountAssets(address, chainId);\n\n      setAssets(assets);\n      setFetching(false);\n    } catch (error) {\n      console.error(error); // tslint:disable-line\n      setFetching(false);\n    }\n  };\n\n  useEffect(() => {\n    if (web3Modal?.cachedProvider) {\n      onConnect();\n    }\n\n    return () => {};\n  }, []);\n\n  return (\n    <walletContext.Provider\n      value={{\n        connected,\n        fetching,\n        address,\n        web3,\n        provider,\n        chainId,\n        networkId,\n        assets,\n        showModal,\n        pendingRequest,\n        result,\n        setConnected,\n        setFetching,\n        setAddress,\n        setWeb3,\n        setProvider,\n        setChainId,\n        setNetworkId,\n        setAssets,\n        setShowModal,\n        setPendingRequest,\n        setResult,\n        onConnect,\n        resetApp,\n      }}\n    >\n      {props.children}\n    </walletContext.Provider>\n  );\n};\n\nexport default WalletProvider;\n","/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/utils.js",[],["105","106"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/bignumber.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/box.js",[],["107","108"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/Providers.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/Home/index.js",[],["109","110"],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/sidebar/index.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/dev.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/chains.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/pages/AppLayout.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/helpers/api.js",[],"/home/amin/Projects/ShieldDAO/ShieldDao-dapp-web3/src/components/VaultCard/index.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":2,"message":"118","line":7,"column":6,"nodeType":"119","endLine":7,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":26},{"ruleId":"120","severity":1,"message":"124","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":17},{"ruleId":"120","severity":1,"message":"125","line":7,"column":19,"nodeType":"122","messageId":"123","endLine":7,"endColumn":29},{"ruleId":"120","severity":1,"message":"126","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":22},{"ruleId":"120","severity":1,"message":"127","line":10,"column":3,"nodeType":"122","messageId":"123","endLine":10,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":11,"column":3,"nodeType":"122","messageId":"123","endLine":11,"endColumn":27},{"ruleId":"120","severity":1,"message":"129","line":12,"column":3,"nodeType":"122","messageId":"123","endLine":12,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":184,"column":6,"nodeType":"132","endLine":184,"endColumn":8,"suggestions":"133"},{"ruleId":"111","replacedBy":"134"},{"ruleId":"113","replacedBy":"135"},{"ruleId":"111","replacedBy":"136"},{"ruleId":"113","replacedBy":"137"},{"ruleId":"111","replacedBy":"138"},{"ruleId":"113","replacedBy":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"react/jsx-no-undef","'Providers' is not defined.","JSXIdentifier","no-unused-vars","'convertUtf8ToHex' is defined but never used.","Identifier","unusedVar","'openBox' is defined but never used.","'getProfile' is defined but never used.","'hashPersonalMessage' is defined but never used.","'recoverPublicKey' is defined but never used.","'recoverPersonalSignature' is defined but never used.","'formatTestTransaction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onConnect' and 'web3Modal?.cachedProvider'. Either include them or remove the dependency array.","ArrayExpression",["142"],["140"],["141"],["140"],["141"],["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [onConnect, web3Modal?.cachedProvider]",{"range":"145","text":"146"},[4593,4595],"[onConnect, web3Modal?.cachedProvider]"]